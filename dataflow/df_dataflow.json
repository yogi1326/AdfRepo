{
	"name": "df_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "Ds_inlinedataset",
						"type": "LinkedServiceReference"
					},
					"name": "Customerdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Ds_output",
						"type": "DatasetReference"
					},
					"name": "copythedatainblob"
				}
			],
			"transformations": [
				{
					"name": "filtertherows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Index as short,",
				"          {Customer Id} as string,",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          {Phone 1} as string,",
				"          {Phone 2} as string,",
				"          Email as string,",
				"          {Subscription Date} as date,",
				"          Website as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'refined',",
				"     folderPath: 'output',",
				"     fileName: 'customers-100.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionBy('hash', 1)) ~> Customerdata",
				"Customerdata filter(Company == 'Steele Group'|| City =='East Andrea') ~> filtertherows",
				"filtertherows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> copythedatainblob"
			]
		}
	}
}